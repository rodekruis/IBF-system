name: 'E2E'
description: 'Run end-to-end tests for IBF'

inputs:
  mailchimp-api-key:
    description: 'Mailchimp API key'
    required: true

runs:
    using: composite

    steps:
      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version-file: './e2e/.node-version'
          cache: 'npm'
          cache-dependency-path: './e2e/package-lock.json'

      - name: Install E2E-Tests code-dependencies
        shell: bash
        working-directory: ./e2e
        run: npm ci --omit=optional --no-fund --no-audit

      - name: Lint E2E-Tests code
        shell: bash
        working-directory: ./e2e
        run: npm run lint

      - name: Set ENV-variables for test-environment
        shell: bash
        run: cp example.env .env

      - name: Install API-service
        shell: bash
        working-directory: ./services/API-service
        run: npm ci --omit=optional --no-fund --no-audit

      - name: Run API-service
        shell: bash
        working-directory: ./
        env:
          MC_API: ${{ inputs.mailchimp-api-key }}
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml up -d ibf-api-service

      - name: Start IBF-dashboard
        shell: bash
        working-directory: 'interfaces/IBF-dashboard'
        env:
          NG_API_URL: http://localhost:4000/api
          NG_CONFIGURATION: production
        run: |
          npm install
          npm run start:prod > dashboard-logs.txt 2>&1 &

      - name: Install E2E-Tests runtime-dependencies
        shell: bash
        working-directory: ./e2e
        run: npx playwright install chromium --with-deps

      - name: Wait for IBF API-service to be running
        shell: bash
        run: timeout 60s sh -c 'until curl http://localhost:4000/api -I; do echo "Waiting for the IBF API-service to be running..."; sleep 1; done'

      - name: Wait for IBF-dashboard to be running
        shell: bash
        run: timeout 60s sh -c 'until curl http://localhost:4200 -I; do echo "Waiting for the IBF-dashboard to be running..."; sleep 1; done'

      - name: Run E2E-Tests with Playwright
        shell: bash
        working-directory: ./e2e
        env:
          DASHBOARD_URL: http://localhost:4200
        run: npm test

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-result-artifacts
          path: |
            ./e2e/test-results/
            ./interfaces/IBF-dashboard/ibf-server-logs.txt
          retention-days: 30

      - name: Docker logs
        if: always()
        uses: jwalton/gh-docker-logs@v2
