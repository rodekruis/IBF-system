name: 'e2e'
description: 'Run end-to-end tests'

inputs:
  mailchimp-api-key:
    description: 'Mailchimp API key'
    required: true
  azure-dev-url:
    description: 'Azure DevOps URL'
    required: true
  azure-devops-token:
    description: 'Azure DevOps token'
    required: true
  azure-test-owner:
    description: 'Azure test owner'
    required: true

runs:
  using: composite

  steps:
    - name: Set up Node.js version
      uses: actions/setup-node@v4
      with:
        node-version-file: './tests/e2e/.node-version'
        cache: 'npm'
        cache-dependency-path: './tests/e2e/package-lock.json'

    - name: Install e2e code-dependencies
      shell: bash
      working-directory: ./tests/e2e
      run: npm ci --omit=optional --no-fund --no-audit

    - name: Lint e2e code
      shell: bash
      working-directory: ./tests/e2e
      run: npm run lint

    - name: Setup environment variables
      shell: bash
      run: cp example.env .env

    - name: Install IBF API-service code-dependencies
      shell: bash
      working-directory: ./services/API-service
      run: npm ci --omit=optional --no-fund --no-audit

    - name: Run IBF API-service
      shell: bash
      env:
        MC_API: ${{ inputs.mailchimp-api-key }}
      run: docker compose -f docker-compose.yml -f docker-compose.ci.yml up -d ibf-api-service

    - name: Start IBF dashboard
      shell: bash
      working-directory: 'interfaces/IBF-dashboard'
      env:
        API_SERVICE_URL: http://localhost:3000/api
        NG_CONFIGURATION: production
      run: |
        npm install
        npm run start:prod > dashboard-logs.txt 2>&1 &

    - name: Install runtime dependencies
      shell: bash
      working-directory: ./tests/e2e
      run: npx playwright install chromium --with-deps

    - name: Wait for IBF API-service to be running
      shell: bash
      run: timeout 60s sh -c 'until curl http://localhost:3000/api -I; do echo "Waiting for the IBF API-service to be running..."; sleep 1; done'

    - name: Wait for IBF dashboard to be running
      shell: bash
      run: timeout 60s sh -c 'until curl http://localhost:4200 -I; do echo "Waiting for the IBF dashboard to be running..."; sleep 1; done'

    - name: Run end-to-end tests
      shell: bash
      working-directory: ./tests/e2e
      env:
        DASHBOARD_URL: http://localhost:4200
        AZURE_DEV_URL: ${{ inputs.azure-dev-url }}
        AZURE_DEVOPS_TOKEN: ${{ inputs.azure-devops-token }}
        AZURE_TEST_OWNER: ${{ inputs.azure-test-owner }}
      run: npm test

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-result-artifacts
        path: |
          ./tests/e2e/test-results/
          ./interfaces/IBF-dashboard/dashboard-logs.txt
        retention-days: 30

    - name: Docker logs
      if: always()
      uses: jwalton/gh-docker-logs@v2
