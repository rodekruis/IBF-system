version: "3.8"

services:
    nginx:
        image: nginx
        command:
            '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload;
            done & nginx -g "daemon off;"'''
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./nginx/ibf-system.conf:/etc/nginx/conf.d/default.conf
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/www/certbot
            - web-interface-root:/var/www/ibf-web-interface
        networks:
            - web-server-network
            - certbot-network
        restart: unless-stopped

    certbot:
        image: certbot/certbot
        entrypoint:
            "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h &
            wait $${!}; done;'"
        volumes:
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/www/certbot
        networks:
            - certbot-network
        depends_on:
            - nginx

    ibf-api-service:
        build:
            context: ./services/API-service
            args:
                - NODE_ENV=production
        image: rodekruis/ibf-api-service
        environment:
            - DB_TYPE=${DB_TYPE}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DB_DATABASE=${DB_DATABASE}
            - DB_USERNAME=${DB_USERNAME}
            - DB_PASSWORD=${DB_PASSWORD}
            - NODE_ENV=production
            - SECRET=${SECRET}
            - RESET_SECRET=${RESET_SECRET}
        networks:
            - web-server-network
        depends_on:
            - ibf-geoserver

    ibf-web-interface:
        build:
            context: ./interfaces/IBF-dashboard
            args:
                - NG_PRODUCTION=true
                - NG_API_URL=${NG_API_URL}
                - NG_USE_MOCK_DATA=${NG_USE_MOCK_DATA}
                - NG_USE_SERVICE_WORKER=${NG_USE_SERVICE_WORKER}
                - NG_GEOSERVER_URL=${NG_GEOSERVER_URL}
        image: rodekruis/ibf-web-interface
        environment:
            - NG_PRODUCTION=true
            - NG_API_URL=${NG_API_URL}
            - NG_USE_MOCK_DATA=${NG_USE_MOCK_DATA}
            - NG_USE_SERVICE_WORKER=${NG_USE_SERVICE_WORKER}
            - NG_GEOSERVER_URL=${NG_GEOSERVER_URL}
        volumes:
            - web-interface-root:/home/node/app/www
        networks:
            - web-server-network

    ibf-pipeline:
        build: ./services/IBF-pipeline
        image: rodekruis/ibf-pipeline
        volumes:
            - pipeline-root:/home/ibf
        networks:
            - pipeline-network
        restart: unless-stopped

    ibf-geoserver:
        image: kartoza/geoserver
        volumes:
            - pipeline-geoserver:/opt/geoserver/data_dir/workspaces/ibf-system/ibf-pipeline
            - workspace-geoserver:/opt/geoserver/data_dir/workspaces/ibf-system
        networks:
            - web-server-network
            - pipeline-network
        restart: unless-stopped

volumes:
    certbot-etc:
        driver: local
        driver_opts:
            type: bind
            device: /home/IBF-system/certbot/conf
            o: bind
    certbot-var:
        driver: local
        driver_opts:
            type: bind
            device: /home/IBF-system/certbot/www
            o: bind
    web-interface-root:
    pipeline-root:
        driver_opts:
            type: bind
            device: /home/IBF-system/services/IBF-pipeline
            o: bind
    pipeline-geoserver:
        driver_opts:
            type: bind
            device: /home/IBF-system/services/IBF-pipeline/geoserver/geodata
            o: bind
    workspace-geoserver:
        driver_opts:
            type: bind
            device: /home/IBF-system/services/IBF-pipeline/geoserver/workspaces/ibf-system
            o: bind

networks:
    certbot-network:
        driver: bridge
    web-server-network:
        driver: bridge
    pipeline-network:
        driver: bridge
